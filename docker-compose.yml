services:
  termit-nginx:
    image: nginx:1.26-alpine
    ports:
      - ${HOST_PORT:-1234}:80
    restart: always
    depends_on:
      - auth-server
      - termit
      - termit-server
      - termit-db-server
      - db-server-proxy
      - ontographer
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      ROOT: ${ROOT}
      ORIGIN: ${URL}
      PORT: ${PUBLIC_PORT:-''}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/nginx.conf.template
  auth-server-db:
    image: postgres:13
    environment:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
    restart: always
    volumes:
      - auth-server-db:/var/lib/postgresql/data
  auth-server:
    image: ghcr.io/kbss-cvut/keycloak-graphdb-user-replicator/keycloak-graphdb:latest
    command:
      - start --import-realm
    environment:
      KC_IMPORT: realm-export.json
      KC_HOSTNAME_URL: ${URL}${ROOT}/sluzby/auth
      KC_HOSTNAME_ADMIN_URL: ${URL}${ROOT}/sluzby/auth/
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_PROXY: edge
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      DB_VENDOR: POSTGRES
      DB_ADDR: auth-server-db
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_SERVER_URL: http://termit-db-server:7200
      DB_SERVER_REPOSITORY_ID: termit
      REPOSITORY_USERNAME: ${GDB_USERNAME}
      REPOSITORY_PASSWORD: ${GDB_PASSWORD}
      DB_SERVER_CONTEXT: http://onto.fel.cvut.cz/ontologies/application/termit/users
      VOCABULARY_USER_TYPE: http://onto.fel.cvut.cz/ontologies/application/termit/pojem/uživatel-termitu
      ADD_ACCOUNTS: false
      REALM_ID: termit
    restart: always
    volumes:
      - auth-server:/opt/keycloak/data
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      - auth-server-db
  termit-db-server:
    build:
      context: db-server
    image: termit-db-server
    depends_on:
        - auth-server
    environment:
      GDB_JAVA_OPTS: -Dgraphdb.external-url=${URL}${ROOT}/sluzby/db-server -Ddefault.min.distinct.threshold=67108864 -Dgraphdb.workbench.cors.enable=true -Dgraphdb.workbench.cors.origin=* -Dgraphdb.workbench.cors.expose-headers=*
    restart: always
    volumes:
      - termit-db-server:/opt/graphdb/home
  termit-server:
    image: kbsscvut/termit
    depends_on:
      - termit-db-server
    environment:
      SERVER_FORWARDHEADERSSTRATEGY: framework
      SPRING_PROFILES_ACTIVE: lucene, no-cache, ontographer
      SPRING_MAIL_HOST: ${MAIL_HOST}
      SPRING_MAIL_PORT: ${MAIL_PORT:-587}
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      LOGGING_FILE_NAME: /tmp/storage/termit.log
      TERMIT_PERSISTENCE_LANGUAGE: cs
      TERMIT_REPOSITORY_URL: http://termit-db-server:7200/repositories/termit
      TERMIT_REPOSITORY_PUBLICURL: ${URL}${ROOT}/sluzby/db-server/repositories/termit
      TERMIT_REPOSITORY_USERNAME: ${GDB_USERNAME}
      TERMIT_REPOSITORY_PASSWORD: ${GDB_PASSWORD}
      TERMIT_CORS_ALLOWEDORIGINS: ${URL}
      TERMIT_FILE_STORAGE: /tmp/storage
      TERMIT_TEXTANALYSIS_URL: http://annotace-server:8080/annotate?enableKeywordExtraction=true
      TERMIT_LANGUAGE_TYPES_SOURCE: /tmp/z-sgov-glosář.ttl
      TERMIT_SECURITY_PROVIDER: oidc
      TERMIT_URL: ${URL}${ROOT}
      TERMIT_MODELINGTOOLURL: ${URL}${ROOT}/ontographer
      TERMIT_VALIDATIONSERVICEURL: http://validation-service:8080/validate
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: ${URL}${ROOT}/sluzby/auth/realms/termit
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI: http://auth-server:8080/realms/termit/protocol/openid-connect/certs
    volumes:
      - termit-server:/tmp/storage
      - ./language/z-sgov-glosář-reduced.ttl:/tmp/z-sgov-glosář.ttl
  db-server-proxy:
    image: ghcr.io/kbss-cvut/graphdb-oauth-proxy/graphdb-oauth-proxy:latest
    depends_on:
      - termit-db-server
    environment:
      SERVER_PORT: 8080
      PROXY_URL: ${URL}${ROOT}/sluzby/db-proxy
      PROXY_GRAPHDB_URL: http://termit-db-server:7200
      PROXY_GRAPHDB_USERNAME: ${GDB_USERNAME}
      PROXY_GRAPHDB_PASSWORD: ${GDB_PASSWORD}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: ${URL}${ROOT}/sluzby/auth/realms/termit
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI: http://auth-server:8080/realms/termit/protocol/openid-connect/certs
  validation-service:
    image: ghcr.io/kbss-cvut/validation-service/validation-service:latest
    depends_on:
      - termit-db-server
    environment:
      VALIDATOR_REPOSITORYURL: http://termit-db-server:7200/repositories/termit
      VALIDATOR_USERNAME: ${GDB_USERNAME}
      VALIDATOR_PASSWORD: ${GDB_PASSWORD}
  annotace-server:
    image: ghcr.io/kbss-cvut/annotace/annotace-spark:latest
    volumes:
      - annotace-server:/tmp
  termit:
    image: kbsscvut/termit-ui
    depends_on:
      - termit-server
    environment:
      SERVER_URL: ${URL}${ROOT}/sluzby/server
      ADMIN_REGISTRATION_ONLY: "true"
      SHOW_PUBLIC_VIEW_ON_UNAUTHORIZED: "true"
      AUTHENTICATION: oidc
      AUTH_SERVER_URL: ${URL}${ROOT}/sluzby/auth/realms/termit
      AUTH_CLIENT_ID: termit-ui
      AUTH_SERVER_MANAGEMENT: ${URL}${ROOT}/sluzby/auth/admin/termit/console/
      AUTH_SERVER_USER_PROFILE: ${URL}${ROOT}/sluzby/auth/realms/termit/account/
  ontographer:
    image: ghcr.io/kbss-cvut/ontographer/ontographer:latest
    environment:
      - CONTEXT=$ONTOGRAPHER_CONTEXT
      - ID=ontographer
      - URL=${URL}${ROOT}/ontographer
      - COMPONENTS=$ONTOGRAPHER_COMPONENTS
      - DEBUG=$ONTOGRAPHER_DEBUG
      - AUTHENTICATION=true
    depends_on:
      - db-server-proxy
    env_file:
      - .env

volumes:
  auth-server-db:
  auth-server:
  termit-db-server:
  termit-server:
  annotace-server:
