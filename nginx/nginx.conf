worker_processes  1;

events {
    worker_connections 1024;
}

http {
    client_max_body_size 25M;

    include mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name  localhost;

        add_header Access-Control-Allow-Origin *;

        location ${ROOT}/sluzby/auth/ {
            proxy_pass http://auth-server:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Increase buffer sizes to handle large headers sent by Keycloak and its clients
            proxy_buffer_size   128k;
            proxy_buffers       4 256k;
            proxy_busy_buffers_size 256k;
        }

        location ${ROOT}/sluzby/db-server/ {
            proxy_pass http://termit-db-server:7200/;
        }

        location = ${ROOT}/ontographer {
          return 302 ${ROOT}/ontographer/;
        }

        location ${ROOT}/ontographer/ {
            rewrite ^/ontographer/(.*) /$1 break;
            proxy_pass http://ontographer/;
            proxy_redirect http://ontographer/ /ontographer/;
            proxy_set_header X-Forwarded-Host $host;
        }

        location = ${ROOT}/sluzby/termit-server {
          return 302 ${ROOT}/sluzby/termit-server/;
        }

        location ${ROOT}/sluzby/termit-server/ {
            proxy_pass http://termit-server:8080/termit/;
            proxy_set_header X-Forwarded-Host $host;
        }

        location = ${ROOT}/sluzby/db-proxy {
          return 302 ${ROOT}/sluzby/termit-server/;
        }

        location ${ROOT}/sluzby/db-proxy/ {
            proxy_pass http://db-server-proxy:8080/gdb-proxy/;
            proxy_set_header X-Forwarded-Host $host;

            proxy_http_version 1.1;
            proxy_set_header   "Connection" "";
        }

        location = ${ROOT} {
            return 302 ${ROOT}/;
        }

        location ${ROOT}/ {
            rewrite ^${ROOT}/(.*) /$1 break;
            proxy_pass http://termit/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            #expires 30d;
            break;
        }

        location ${ROOT}/health-check {
            return 200;
            access_log off;
        }
    }
}
